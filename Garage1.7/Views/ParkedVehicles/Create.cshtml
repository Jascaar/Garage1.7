@model Garage1._7.Models.ParkedVehicle


@{
    ViewBag.Title = "Park";
}


@{int freeSlot = ViewBag.FreeSlot;
    int freeSlots = ViewBag.FreeSlots;}


<h2>Park</h2>


@if (freeSlots <= 0)
{
    <text><br />
        <h1>No free slots available, please come back later</h1>
        <br />></text>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    ; if (freeSlots > 0)
    {

        <div class="form-horizontal">

            <h4>ParkedVehicle</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ParkingSlot, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ParkingSlot, new { @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ParkingSlot, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.TypeOfVehicle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.TypeOfVehicle, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TypeOfVehicle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VehicleRegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VehicleRegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VehicleRegistrationNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VehicleBrand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VehicleBrand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VehicleBrand, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VehicleModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VehicleModel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VehicleModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Color, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TiresOnVehicle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TiresOnVehicle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TiresOnVehicle, "", new { @class = "text-danger" })
                </div>
            </div>

            <!--      <div class="form-group">
                        @Html.LabelFor(model => model.StartParking, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartParking, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartParking, "", new { @class = "text-danger" })
                        </div>
                    </div>
            -->
            @if (freeSlots > 0)

            {

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            }
        </div>
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
        